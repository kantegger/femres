---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';
import '../i18n/translations';
import { getLocaleFromUrl, createT, getLocalizedPath } from '../i18n/index';

export interface Props {
  title: string;
  description?: string;
}

// 获取当前语言和翻译函数
const locale = getLocaleFromUrl(Astro.url);
const t = createT(locale);

const { title, description = t('common.siteDescription') } = Astro.props;
---

<!doctype html>
<html lang={locale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <!-- Alternate language links -->
    <link rel="alternate" hreflang="zh-CN" href={getLocalizedPath(Astro.url.pathname, 'zh-CN')} />
    <link rel="alternate" hreflang="en" href={getLocalizedPath(Astro.url.pathname, 'en')} />
    <link rel="alternate" hreflang="x-default" href={getLocalizedPath(Astro.url.pathname, 'zh-CN')} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:locale" content={locale === 'zh-CN' ? 'zh_CN' : 'en_US'} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />

    <!-- Google AdSense Verification -->
    <meta name="google-adsense-account" content="ca-pub-2079107911432321" />
  </head>
  <body class="min-h-screen bg-gray-50 dark:bg-gray-900 transition-colors flex flex-col">
    <Header locale={locale} />
    <main class="flex-1">
      <slot />
    </main>
    <Footer locale={locale} />
  </body>
</html>

<style>
  html {
    font-family: system-ui, sans-serif;
    scroll-behavior: smooth;
  }
  
  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .animate-fade-in {
    animation: fade-in 0.3s ease-out;
  }
</style>

<script is:inline>
  function initTheme() {
    // 获取存储的主题或系统偏好
    const storedTheme = localStorage.getItem('theme');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    
    // 确定初始主题
    const isDark = storedTheme === 'dark' || (!storedTheme && prefersDark);
    
    // 应用主题
    if (isDark) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
    
    return isDark;
  }
  
  function toggleTheme() {
    const isDark = document.documentElement.classList.contains('dark');
    
    if (isDark) {
      document.documentElement.classList.remove('dark');
      localStorage.setItem('theme', 'light');
    } else {
      document.documentElement.classList.add('dark');
      localStorage.setItem('theme', 'dark');
    }
  }
  
  // 立即初始化主题（防止闪烁）
  initTheme();
  
  // 页面加载完成后绑定事件
  document.addEventListener('DOMContentLoaded', function() {
    const themeToggle = document.getElementById('theme-toggle');
    const themeToggleMobile = document.getElementById('theme-toggle-mobile');
    
    if (themeToggle) {
      themeToggle.addEventListener('click', toggleTheme);
    }
    
    if (themeToggleMobile) {
      themeToggleMobile.addEventListener('click', toggleTheme);
    }
  });
</script>