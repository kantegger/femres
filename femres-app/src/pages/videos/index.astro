---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import VideoCard from '../../components/VideoCard.astro';
import { createT } from '../../i18n';
import { getTopicTranslation, findTopicByName } from '../../i18n/topicsUtils';

const videos = await getCollection('videos');
// 中文界面显示不带-en后缀的视频
const publishedVideos = videos.filter(video => {
  const isPublished = video.data.status === 'published';
  if (!isPublished) return false;
  return !video.slug.endsWith('-en');
});

// 按发布日期排序
const sortedVideos = publishedVideos.sort((a, b) => {
  return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
});

// 获取所有主题标签
const allTopics = [...new Set(publishedVideos.flatMap(video => video.data.topics))].sort();

// 设置当前语言和翻译函数
const currentLocale = 'zh-CN';
const t = createT(currentLocale);

// 统计信息
const totalVideos = publishedVideos.length;
---

<Layout 
  title="视频 - FemRes"
  description="精选女性主义视频内容，包括纪录片、演讲、讨论等多种形式，为学习女性主义提供生动的视觉资源。"
>
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <!-- Header -->
    <div class="relative overflow-hidden text-white border-b border-white/20">
      <!-- Gradient Background Layer -->
      <div class="absolute inset-0 bg-gradient-to-r from-red-600 to-orange-600" style="filter: saturate(1.3) contrast(1.15);"></div>
      <!-- 粗磨砂纹理层 -->
      <div class="absolute inset-0 opacity-65" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.5) 1px, transparent 0); background-size: 12px 12px;"></div>
      <!-- 中等磨砂纹理层 -->
      <div class="absolute inset-0 opacity-45" style="background-image: radial-gradient(circle at 0.8px 0.8px, rgba(255,255,255,0.7) 0.8px, transparent 0); background-size: 6px 6px;"></div>
      <!-- 细磨砂纹理层 -->
      <div class="absolute inset-0 opacity-35" style="background-image: radial-gradient(circle at 0.3px 0.3px, rgba(255,255,255,0.8) 0.3px, transparent 0); background-size: 3px 3px;"></div>
      <!-- 保持现有的玻璃叠加层 -->
      <div class="absolute inset-0 bg-white/10 backdrop-blur-sm"></div>
      <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_top,rgba(255,255,255,0.1),transparent)]"></div>
      <div class="relative z-10">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
          <div class="relative backdrop-blur-sm">
            <div class="text-center">
              <h1 class="text-4xl md:text-5xl font-bold mb-4">
                🎬 视频资源
              </h1>
              <p class="text-xl opacity-90 mb-8 max-w-2xl mx-auto">
                汇集女性主义纪录片、演讲、访谈等优质视频内容，用影像传递思想力量
              </p>

              <!-- 统计信息 -->
              <div class="flex flex-wrap justify-center gap-6 text-sm">
                <div class="flex items-center bg-white/15 backdrop-blur-md border border-white/20 shadow-lg shadow-black/10 px-4 py-2 rounded-full">
                  <span class="text-white mr-2">🎥</span>
                  <span class="text-white">共 {totalVideos} 个视频</span>
                </div>
                <div class="flex items-center bg-white/15 backdrop-blur-md border border-white/20 shadow-lg shadow-black/10 px-4 py-2 rounded-full">
                  <span class="text-white mr-2">🏷️</span>
                  <span class="text-white">{allTopics.length} 个主题分类</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      
      <!-- 主题标签筛选 -->
      <div class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">主题分类</h2>
        <div class="relative">
          <!-- 主题标签容器 -->
          <div id="topics-container" class="flex flex-wrap gap-3 overflow-hidden transition-all duration-300" style="max-height: 90px;">
            <button 
              class="filter-btn inline-flex items-center px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors text-sm font-medium"
              data-filter="all"
            >
              全部视频
            </button>
            {allTopics.map(topic => {
              const topicInfo = findTopicByName(topic);
              const translatedTopic = topicInfo
                ? getTopicTranslation(topic, currentLocale as 'zh-CN' | 'en')
                : topic;
              return (
                <button
                  class="filter-btn inline-flex items-center px-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:border-red-500 dark:hover:border-red-400 hover:text-red-600 dark:hover:text-red-400 transition-colors text-sm"
                  data-filter={topic}
                >
                  {translatedTopic}
                </button>
              );
            })}
          </div>
          
          <!-- 展开/折叠按钮 - 只在需要时显示 -->
          {allTopics.length > 20 && (
            <div class="flex justify-center mt-4">
              <button 
                id="toggle-topics-btn"
                class="inline-flex items-center px-4 py-2 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-lg transition-colors text-sm font-medium"
              >
                <span id="toggle-topics-text">展开更多主题</span>
                <svg id="toggle-topics-icon" class="ml-2 w-4 h-4 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
                </svg>
              </button>
            </div>
          )}
        </div>
      </div>

      <!-- 视频网格 -->
      <div class="mb-8">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
            <span id="current-filter">全部视频</span>
            <span id="video-count" class="text-base font-normal text-gray-600 dark:text-gray-400 ml-2">
              ({totalVideos} 个)
            </span>
          </h2>
          <div class="flex items-center gap-4">
            <select id="sort-select" class="px-3 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg text-sm text-gray-900 dark:text-white">
              <option value="date-desc">最新发布</option>
              <option value="date-asc">最早发布</option>
              <option value="title-asc">标题 A-Z</option>
              <option value="title-desc">标题 Z-A</option>
              <option value="duration-asc">时长（短）</option>
              <option value="duration-desc">时长（长）</option>
            </select>
          </div>
        </div>
        
        <div id="videos-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {sortedVideos.map(video => (
            <div class="video-item" data-topics={JSON.stringify(video.data.topics)} data-title={video.data.title} data-date={video.data.publishDate.toISOString()} data-duration={video.data.duration || 0}>
              <VideoCard 
                title={video.data.title}
                author={video.data.author}
                description={video.data.description}
                slug={video.slug}
                thumbnail={video.data.thumbnail}
                publishDate={video.data.publishDate}
                duration={video.data.duration}
                sourceUrl={video.data.sourceUrl}
                topics={video.data.topics}
              />
            </div>
          ))}
        </div>
      </div>

      <!-- 空状态 -->
      {sortedVideos.length === 0 && (
        <div class="text-center py-16">
          <div class="text-6xl mb-4">🎬</div>
          <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">
            暂无视频内容
          </h3>
          <p class="text-gray-600 dark:text-gray-400">
            我们正在努力添加更多优质的女性主义视频资源
          </p>
        </div>
      )}

      <!-- 观看指南 -->
      <div class="mt-16 bg-gradient-to-r from-red-50 to-orange-50 dark:from-red-900/20 dark:to-orange-900/20 rounded-2xl p-8">
        <div class="text-center">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
            🎯 观看建议
          </h2>
          <div class="grid md:grid-cols-3 gap-6 text-left mt-8">
            <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
              <div class="text-2xl mb-3">📽️</div>
              <h3 class="font-semibold text-gray-900 dark:text-white mb-2">纪录片优先</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                推荐从经典女性主义纪录片开始，如《RBG》等，了解历史人物与重要事件
              </p>
            </div>
            <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
              <div class="text-2xl mb-3">🎤</div>
              <h3 class="font-semibold text-gray-900 dark:text-white mb-2">演讲访谈</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                观看学者、活动家的演讲和访谈，深入理解不同视角的女性主义观点
              </p>
            </div>
            <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
              <div class="text-2xl mb-3">💭</div>
              <h3 class="font-semibold text-gray-900 dark:text-white mb-2">批判思考</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                观看后可结合个人经历和现实情况思考，形成独立的判断和见解
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const sortSelect = document.getElementById('sort-select');
    const videosGrid = document.getElementById('videos-grid');
    const currentFilter = document.getElementById('current-filter');
    const videoCount = document.getElementById('video-count');
    
    // 主题展开/折叠功能
    const topicsContainer = document.getElementById('topics-container');
    const toggleBtn = document.getElementById('toggle-topics-btn');
    const toggleText = document.getElementById('toggle-topics-text');
    const toggleIcon = document.getElementById('toggle-topics-icon');
    let isTopicsExpanded = false;
    
    // 只在按钮存在时添加事件监听器
    if (toggleBtn) {
      toggleBtn.addEventListener('click', function() {
        if (isTopicsExpanded) {
          // 折叠主题
          topicsContainer.style.maxHeight = '90px'; // 约2行高度
          toggleText.textContent = '展开更多主题';
          toggleIcon.style.transform = 'rotate(0deg)';
          isTopicsExpanded = false;
        } else {
          // 展开主题
          topicsContainer.style.maxHeight = 'none';
          toggleText.textContent = '收起主题';
          toggleIcon.style.transform = 'rotate(180deg)';
          isTopicsExpanded = true;
        }
      });
    }
    
    let currentTopic = 'all';
    
    // 筛选功能
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filterValue = this.dataset.filter;
        currentTopic = filterValue;
        
        // 更新按钮样式
        filterButtons.forEach(btn => {
          btn.classList.remove('bg-red-600', 'text-white');
          btn.classList.add('bg-white', 'dark:bg-gray-800', 'border', 'border-gray-300', 'dark:border-gray-600', 'text-gray-700', 'dark:text-gray-300');
        });
        
        this.classList.remove('bg-white', 'dark:bg-gray-800', 'border', 'border-gray-300', 'dark:border-gray-600', 'text-gray-700', 'dark:text-gray-300');
        this.classList.add('bg-red-600', 'text-white');
        
        // 更新标题
        currentFilter.textContent = filterValue === 'all' ? '全部视频' : filterValue;
        
        // 执行筛选
        filterAndSort();
      });
    });
    
    // 排序功能
    sortSelect.addEventListener('change', function() {
      filterAndSort();
    });
    
    function filterAndSort() {
      const videoItems = Array.from(document.querySelectorAll('.video-item'));
      const sortValue = sortSelect.value;
      
      // 筛选
      let filteredVideos = videoItems.filter(item => {
        if (currentTopic === 'all') return true;
        const topics = JSON.parse(item.dataset.topics);
        return topics.includes(currentTopic);
      });
      
      // 排序
      filteredVideos.sort((a, b) => {
        switch (sortValue) {
          case 'date-desc':
            return new Date(b.dataset.date).getTime() - new Date(a.dataset.date).getTime();
          case 'date-asc':
            return new Date(a.dataset.date).getTime() - new Date(b.dataset.date).getTime();
          case 'title-asc':
            return a.dataset.title.localeCompare(b.dataset.title);
          case 'title-desc':
            return b.dataset.title.localeCompare(a.dataset.title);
          case 'duration-asc':
            return parseInt(a.dataset.duration) - parseInt(b.dataset.duration);
          case 'duration-desc':
            return parseInt(b.dataset.duration) - parseInt(a.dataset.duration);
          default:
            return 0;
        }
      });
      
      // 隐藏所有视频
      videoItems.forEach(item => {
        item.style.display = 'none';
      });
      
      // 显示筛选后的视频
      filteredVideos.forEach((item, index) => {
        item.style.display = 'block';
        videosGrid.appendChild(item);
      });
      
      // 更新计数
      videoCount.textContent = `(${filteredVideos.length} 个)`;
      
      // 如果没有结果，显示空状态
      const emptyState = document.getElementById('empty-state');
      if (filteredVideos.length === 0) {
        if (!emptyState) {
          const emptyDiv = document.createElement('div');
          emptyDiv.id = 'empty-state';
          emptyDiv.className = 'col-span-full text-center py-16';
          emptyDiv.innerHTML = `
            <div class="text-6xl mb-6">🎬</div>
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
              暂无相关视频
            </h3>
            <p class="text-gray-600 dark:text-gray-400">
              该主题下暂无视频，试试其他主题或查看全部视频
            </p>
          `;
          videosGrid.appendChild(emptyDiv);
        }
      } else if (emptyState) {
        emptyState.remove();
      }
    }
  });
</script>