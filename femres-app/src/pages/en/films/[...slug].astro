---
export const prerender = true;

import { getCollection } from 'astro:content';
import Layout from '../../../layouts/Layout.astro';
import InteractionButtons from '../../../components/InteractionButtons';
import Discussion from '../../../components/Discussion';
import { createT, getLocalizedPath } from '../../../i18n/index';
import { getTopicTranslation } from '../../../i18n/topicsUtils';

const currentLocale = 'en';
const t = createT(currentLocale);

export async function getStaticPaths() {
  const films = await getCollection('films');
  // 英文界面：为所有带-en后缀的电影生成页面，但URL不带-en后缀
  const englishInterfaceFilms = films.filter(film => film.slug.endsWith('-en'));
  return englishInterfaceFilms.map((film) => ({
    params: { slug: film.slug.replace('-en', '') }, // 去掉-en后缀生成URL
    props: film,
  }));
}

const film = Astro.props;
const { Content } = await film.render();

// 获取相关电影（相同主题的其他电影）
const allFilms = await getCollection('films');
const relatedFilms = allFilms
  .filter(f =>
    f.slug !== film.slug &&
    f.data.topics.some(topic => film.data.topics.includes(topic))
  )
  .slice(0, 4);

// 格式化日期
const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// 语言映射
const getLanguageName = (code: string) => {
  const languageMap: Record<string, string> = {
    'zh-CN': 'Simplified Chinese',
    'zh-TW': 'Traditional Chinese',
    'en': 'English',
    'fr': 'French',
    'de': 'German',
    'es': 'Spanish',
    'it': 'Italian',
    'ja': 'Japanese',
    'ko': 'Korean',
    'pt': 'Portuguese',
    'ru': 'Russian'
  };
  return languageMap[code] || code;
};

// Generate localized URLs
const homeLink = getLocalizedPath('/', currentLocale);
const filmsLink = getLocalizedPath('films', currentLocale);
---

<Layout
  title={`${film.data.title} - ${film.data.director} - FemRes`}
  description={film.data.description}
>
  <article class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">

    <!-- Breadcrumb -->
    <nav class="mb-8">
      <div class="flex items-center space-x-2 text-sm text-gray-500 dark:text-gray-400">
        <a href={homeLink} class="hover:text-purple-600 dark:hover:text-purple-400">{t('nav.home')}</a>
        <span>/</span>
        <a href={filmsLink} class="hover:text-purple-600 dark:hover:text-purple-400">{t('nav.films')}</a>
        <span>/</span>
        <span class="text-gray-900 dark:text-white">{film.data.title}</span>
      </div>
    </nav>

    <!-- Film Header with Poster -->
    <div class="mb-12">
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- Poster and Genre -->
        <div class="lg:w-96 flex-shrink-0">
          <div class="aspect-[2/3] bg-gradient-to-br from-purple-100 to-pink-100 dark:from-purple-900 dark:to-pink-900 relative overflow-hidden rounded-xl shadow-2xl mb-4">
            {film.data.posterImage ? (
              <img
                src={film.data.posterImage}
                alt={film.data.title}
                class="w-full h-full object-cover"
              />
            ) : (
              <div class="w-full h-full flex items-center justify-center">
                <div class="text-center p-8">
                  <span class="text-7xl mb-4 block">🎬</span>
                  <p class="text-gray-600 dark:text-gray-400">No Poster Available</p>
                </div>
              </div>
            )}
          </div>

          <!-- Genre under poster -->
          {film.data.genre && film.data.genre.length > 0 && (
            <div class="flex flex-wrap gap-3">
              {film.data.genre.map(g => (
                <span class="px-4 py-2 bg-blue-100 dark:bg-blue-900/50 text-blue-700 dark:text-blue-300 rounded-lg text-base font-semibold shadow-md border border-blue-200 dark:border-blue-700">
                  {g}
                </span>
              ))}
            </div>
          )}
        </div>

        <!-- Film Info -->
        <div class="flex-1">
          <h1 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-2">
            {film.data.title}
          </h1>
          {film.data.originalTitle && (
            <p class="text-lg text-gray-600 dark:text-gray-400 mb-6">
              {film.data.originalTitle}
            </p>
          )}

          <!-- Description -->
          <div class="bg-gray-50 dark:bg-gray-800 rounded-xl p-6 mb-6">
            <p class="text-gray-700 dark:text-gray-300 leading-relaxed text-base">
              {film.data.description}
            </p>
          </div>

          <!-- Film Details Grid -->
          <div class="grid grid-cols-2 md:grid-cols-3 gap-4 mb-6">
            <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
              <span class="text-sm text-gray-500 dark:text-gray-400 block mb-1">{t('common.director')}</span>
              <span class="font-semibold text-gray-900 dark:text-white">{film.data.director}</span>
            </div>
            <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
              <span class="text-sm text-gray-500 dark:text-gray-400 block mb-1">{t('common.year')}</span>
              <span class="font-semibold text-gray-900 dark:text-white">{film.data.year}</span>
            </div>
            <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
              <span class="text-sm text-gray-500 dark:text-gray-400 block mb-1">{t('common.country')}</span>
              <span class="font-semibold text-gray-900 dark:text-white">{film.data.country}</span>
            </div>
            {film.data.duration && (
              <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
                <span class="text-sm text-gray-500 dark:text-gray-400 block mb-1">{t('common.duration')}</span>
                <span class="font-semibold text-gray-900 dark:text-white">{film.data.duration}</span>
              </div>
            )}
            {film.data.language && (
              <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
                <span class="text-sm text-gray-500 dark:text-gray-400 block mb-1">{t('common.language')}</span>
                <span class="font-semibold text-gray-900 dark:text-white">{getLanguageName(film.data.language)}</span>
              </div>
            )}
            <div class="bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700">
              <span class="text-sm text-gray-500 dark:text-gray-400 block mb-1">Release Date</span>
              <span class="font-semibold text-gray-900 dark:text-white">{formatDate(film.data.releaseDate)}</span>
            </div>
          </div>

          <!-- Cast -->
          {film.data.cast && film.data.cast.length > 0 && (
            <div class="mb-6">
              <h3 class="text-sm text-gray-500 dark:text-gray-400 mb-2">{t('common.cast')}</h3>
              <div class="flex flex-wrap gap-2">
                {film.data.cast.map(actor => (
                  <span class="px-3 py-1 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-full text-sm">
                    {actor}
                  </span>
                ))}
              </div>
            </div>
          )}

          <!-- Topics -->
          <div class="mb-6">
            <h3 class="text-sm text-gray-500 dark:text-gray-400 mb-2">{t('common.topics')}</h3>
            <div class="flex flex-wrap gap-2">
              {film.data.topics.map(topic => (
                <a
                  href={getLocalizedPath(`topics/${encodeURIComponent(topic)}`, currentLocale)}
                  class="inline-flex items-center px-3 py-1 bg-gradient-to-r from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 border border-purple-200 dark:border-purple-700 text-purple-700 dark:text-purple-300 rounded-full text-sm font-medium hover:from-purple-100 hover:to-pink-100 dark:hover:from-purple-900/40 dark:hover:to-pink-900/40 hover:border-purple-300 dark:hover:border-purple-600 hover:shadow-sm transition-all duration-200"
                >
                  #{getTopicTranslation(topic, 'en')}
                </a>
              ))}
            </div>
          </div>

          <!-- Interaction Buttons -->
          <div class="pt-4 border-t border-gray-200 dark:border-gray-700">
            <InteractionButtons
              contentId={`film-${film.slug}`}
              contentType="film"
              client:load
            />
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="flex flex-col lg:flex-row gap-8">
      <!-- Film Review -->
      <div class="flex-1">
        <div class="bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-sm border border-gray-100 dark:border-gray-700">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6 flex items-center">
            <span class="text-purple-600 dark:text-purple-400 mr-3">🎥</span>
            Film Analysis & Review
          </h2>
          <div class="prose prose-lg max-w-none
                       prose-headings:text-gray-900 dark:prose-headings:text-white
                       prose-p:text-gray-700 dark:prose-p:text-gray-300
                       prose-a:text-purple-600 hover:prose-a:text-purple-800
                       prose-strong:text-gray-900 dark:prose-strong:text-white
                       prose-blockquote:text-gray-700 dark:prose-blockquote:text-gray-300
                       prose-blockquote:border-purple-500
                       prose-code:text-purple-600 dark:prose-code:text-purple-400
                       prose-pre:bg-gray-800 dark:prose-pre:bg-gray-900
                       prose-th:text-gray-900 dark:prose-th:text-white
                       prose-td:text-gray-700 dark:prose-td:text-gray-300">
            <Content />
          </div>
        </div>
      </div>

      <!-- Sidebar -->
      <div class="lg:w-80 flex-shrink-0">
        <div class="sticky top-20 space-y-6">
          <!-- Awards & Recognition -->
          {film.data.awards && film.data.awards.length > 0 && (
            <div class="bg-gradient-to-br from-yellow-50 to-orange-50 dark:from-yellow-900/20 dark:to-orange-900/20 rounded-xl p-6 shadow-sm border border-yellow-200 dark:border-yellow-800/30">
              <h3 class="font-semibold text-gray-900 dark:text-white mb-4 flex items-center">
                <span class="text-yellow-600 dark:text-yellow-400 mr-2">🏆</span>
                Awards & Recognition
              </h3>
              <ul class="space-y-2 text-sm">
                {film.data.awards.map(award => (
                  <li class="flex items-start">
                    <span class="text-yellow-500 mr-2">•</span>
                    <span class="text-gray-700 dark:text-gray-300">{award}</span>
                  </li>
                ))}
              </ul>
            </div>
          )}

          <!-- Ratings & Links -->
          <div class="bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-blue-900/20 dark:to-indigo-900/20 rounded-xl p-6 shadow-sm border border-blue-200 dark:border-blue-800/30">
            <h3 class="font-semibold text-gray-900 dark:text-white mb-4 flex items-center">
              <span class="text-blue-600 dark:text-blue-400 mr-2">⭐</span>
              Ratings & Links
            </h3>
            <div class="space-y-3">
              {/* IMDB Rating & Link */}
              {film.data.sourceUrl?.find(link => link.platform === 'IMDB') && (
                <a
                  href={film.data.sourceUrl.find(link => link.platform === 'IMDB').url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="block w-full px-4 py-3 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border border-blue-300 dark:border-blue-700 rounded-lg transition-all duration-200"
                >
                  <div class="flex justify-between items-center">
                    <span class="text-blue-700 dark:text-blue-300 font-medium">IMDB</span>
                    {film.data.imdbRating && (
                      <span class="font-bold text-lg text-yellow-600 dark:text-yellow-400">
                        {film.data.imdbRating}/10
                      </span>
                    )}
                  </div>
                </a>
              )}

              {/* Douban Rating & Link */}
              {film.data.sourceUrl?.find(link => link.platform === '豆瓣') && (
                <a
                  href={film.data.sourceUrl.find(link => link.platform === '豆瓣').url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="block w-full px-4 py-3 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border border-blue-300 dark:border-blue-700 rounded-lg transition-all duration-200"
                >
                  <div class="flex justify-between items-center">
                    <span class="text-blue-700 dark:text-blue-300 font-medium">Douban</span>
                    {film.data.doubanRating && (
                      <span class="font-bold text-lg text-green-600 dark:text-green-400">
                        {film.data.doubanRating}/10
                      </span>
                    )}
                  </div>
                </a>
              )}

              {/* Other Links without ratings */}
              {film.data.sourceUrl?.filter(link => link.platform !== 'IMDB' && link.platform !== '豆瓣').map(link => (
                <a
                  href={link.url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="block w-full px-4 py-3 bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border border-blue-300 dark:border-blue-700 text-blue-700 dark:text-blue-300 font-medium rounded-lg transition-all duration-200 text-center"
                >
                  {link.platform}
                </a>
              ))}

              {/* If no source links at all */}
              {(!film.data.sourceUrl || film.data.sourceUrl.length === 0) && (
                <p class="text-sm text-gray-600 dark:text-gray-400">
                  No links available
                </p>
              )}
            </div>
          </div>

          <!-- Support Us -->
          <div class="bg-gradient-to-br from-purple-50 to-pink-50 dark:from-purple-900/20 dark:to-pink-900/20 rounded-xl p-6 shadow-sm border border-purple-200 dark:border-purple-800/30">
            <h3 class="font-semibold text-gray-900 dark:text-white mb-3 text-center">{t('common.support')}</h3>
            <p class="text-sm text-gray-600 dark:text-gray-400 mb-4 text-center">
              {t('common.supportMessage')}
            </p>
            <a
              href="https://buymeacoffee.com/femres"
              target="_blank"
              rel="noopener noreferrer"
              class="block w-full px-4 py-3 bg-gradient-to-r from-yellow-400 to-orange-500 hover:from-yellow-500 hover:to-orange-600 text-white font-semibold rounded-lg transition-all duration-200 text-center"
            >
              ☕ Buy me a coffee
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- Related Films -->
    {relatedFilms.length > 0 && (
      <section class="border-t border-gray-200 dark:border-gray-700 pt-12 mt-16">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-8">Related Recommendations</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {relatedFilms.map(relatedFilm => (
            <a
              href={getLocalizedPath(`films/${relatedFilm.slug.replace('-en', '')}`, currentLocale)}
              class="group block bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700 overflow-hidden hover:shadow-lg hover:-translate-y-1 transition-all duration-200"
            >
              <div class="aspect-[2/3] bg-gradient-to-br from-purple-100 to-pink-100 dark:from-purple-900 dark:to-pink-900 relative">
                {relatedFilm.data.posterImage ? (
                  <img
                    src={relatedFilm.data.posterImage}
                    alt={relatedFilm.data.title}
                    class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                  />
                ) : (
                  <div class="w-full h-full flex items-center justify-center">
                    <span class="text-5xl">🎬</span>
                  </div>
                )}
                <div class="absolute top-2 left-2 px-2 py-1 bg-black/60 backdrop-blur-sm text-white rounded text-xs font-semibold">
                  {relatedFilm.data.year}
                </div>
              </div>
              <div class="p-4">
                <h3 class="font-semibold text-gray-900 dark:text-white mb-1 group-hover:text-purple-600 dark:group-hover:text-purple-400 transition-colors line-clamp-1">
                  {relatedFilm.data.title}
                </h3>
                <p class="text-gray-600 dark:text-gray-400 text-sm mb-2">
                  {relatedFilm.data.director}
                </p>
                <p class="text-gray-500 dark:text-gray-500 text-xs">
                  {relatedFilm.data.country} · {relatedFilm.data.duration || 'Unknown duration'}
                </p>
              </div>
            </a>
          ))}
        </div>
      </section>
    )}

    <!-- Discussion Section -->
    <Discussion
      contentId={`film-${film.slug}`}
      contentType="film"
      client:load
    />
  </article>
</Layout>

<style>
  .line-clamp-1 {
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>