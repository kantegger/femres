---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import PaperCard from '../../components/PaperCard.astro';
import { createT } from '../../i18n';
import { getTopicTranslation, findTopicByName } from '../../i18n/topicsUtils';

// 获取所有已发布的论文
const papers = await getCollection('papers', ({ data }) => data.status === 'published');

// 按发布日期排序
const sortedPapers = papers.sort((a, b) => new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime());

// 统计信息
const totalPapers = papers.length;
const totalCitations = papers.reduce((acc, paper) => acc + (paper.data.citationCount || 0), 0);

// 获取所有主题并去重
const allTopics = [...new Set(papers.flatMap(paper => paper.data.topics))].sort();

// 设置当前语言和翻译函数
const currentLocale = 'zh-CN';
const t = createT(currentLocale);

// 论文类型统计
const paperTypes = papers.reduce((acc, paper) => {
  const type = paper.data.paperType || 'research';
  acc[type] = (acc[type] || 0) + 1;
  return acc;
}, {} as Record<string, number>);

// 期刊统计
const journalCount = new Set(papers.map(paper => paper.data.journal).filter(Boolean)).size;

// 格式化数字
const formatNumber = (num: number) => {
  if (num >= 1000) {
    return (num / 1000).toFixed(1) + 'K';
  }
  return num.toString();
};
---

<Layout title="学术论文 - FemRes" description="汇聚女性主义学术研究的前沿论文，探索性别研究的理论发展与实践应用">
  <!-- Hero Section -->
  <div class="relative overflow-hidden text-white border-b border-white/20">
    <!-- Gradient Background Layer -->
    <div class="absolute inset-0 bg-gradient-to-r from-slate-600 to-gray-600" style="filter: saturate(1.3) contrast(1.15);"></div>
    <!-- 粗磨砂纹理层 -->
    <div class="absolute inset-0 opacity-65" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.5) 1px, transparent 0); background-size: 12px 12px;"></div>
    <!-- 中等磨砂纹理层 -->
    <div class="absolute inset-0 opacity-45" style="background-image: radial-gradient(circle at 0.8px 0.8px, rgba(255,255,255,0.7) 0.8px, transparent 0); background-size: 6px 6px;"></div>
    <!-- 细磨砂纹理层 -->
    <div class="absolute inset-0 opacity-35" style="background-image: radial-gradient(circle at 0.3px 0.3px, rgba(255,255,255,0.8) 0.3px, transparent 0); background-size: 3px 3px;"></div>
    <!-- 保持现有的玻璃叠加层 -->
    <div class="absolute inset-0 bg-white/10 backdrop-blur-sm"></div>
    <div class="absolute inset-0 bg-[radial-gradient(ellipse_at_top,rgba(255,255,255,0.1),transparent)]"></div>
    <div class="relative z-10">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
        <div class="relative backdrop-blur-sm">
          <div class="text-center">
            <h1 class="text-4xl md:text-5xl font-bold mb-4">
              📄 学术论文
            </h1>
            <p class="text-xl opacity-90 mb-8 max-w-2xl mx-auto">
              汇聚女性主义学术研究的前沿成果，探索性别研究的理论创新与实证分析
            </p>

            <!-- Statistics -->
            <div class="flex flex-wrap justify-center gap-6 text-sm">
              <div class="flex items-center bg-white/15 backdrop-blur-md border border-white/20 shadow-lg shadow-black/10 px-4 py-2 rounded-full">
                <span class="text-white mr-2">📄</span>
                <span class="text-white">共 {totalPapers} 篇论文</span>
              </div>
              <div class="flex items-center bg-white/15 backdrop-blur-md border border-white/20 shadow-lg shadow-black/10 px-4 py-2 rounded-full">
                <span class="text-white mr-2">📊</span>
                <span class="text-white">总引用 {formatNumber(totalCitations)} 次</span>
              </div>
              <div class="flex items-center bg-white/15 backdrop-blur-md border border-white/20 shadow-lg shadow-black/10 px-4 py-2 rounded-full">
                <span class="text-white mr-2">📚</span>
                <span class="text-white">{journalCount} 个期刊</span>
              </div>
              <div class="flex items-center bg-white/15 backdrop-blur-md border border-white/20 shadow-lg shadow-black/10 px-4 py-2 rounded-full">
                <span class="text-white mr-2">🏷️</span>
                <span class="text-white">{allTopics.length} 个研究领域</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Main Content -->
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    
    <!-- 主题标签筛选 -->
    <div class="mb-12">
      <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">研究领域</h2>
      <div class="relative">
        <!-- 主题标签容器 -->
        <div id="topics-container" class="flex flex-wrap gap-3 overflow-hidden transition-all duration-300" style="max-height: 90px;">
          <button 
            data-topic="all"
            class="topic-filter inline-flex items-center px-4 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors text-sm font-medium active"
          >
            全部论文
          </button>
          {allTopics.map(topic => {
            const topicInfo = findTopicByName(topic);
            const translatedTopic = topicInfo
              ? getTopicTranslation(topic, currentLocale as 'zh-CN' | 'en')
              : topic;
            return (
              <button
                data-topic={topic}
                class="topic-filter inline-flex items-center px-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:border-amber-500 dark:hover:border-amber-400 hover:text-amber-600 dark:hover:text-amber-400 transition-colors text-sm"
              >
                {translatedTopic}
              </button>
            );
          })}
        </div>
        
        <!-- 展开/折叠按钮 - 只在需要时显示 -->
        {allTopics.length > 20 && (
          <div class="flex justify-center mt-4">
            <button 
              id="toggle-topics-btn"
              class="inline-flex items-center px-4 py-2 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-lg transition-colors text-sm font-medium"
            >
              <span id="toggle-topics-text">展开更多主题</span>
              <svg id="toggle-topics-icon" class="ml-2 w-4 h-4 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
              </svg>
            </button>
          </div>
        )}
      </div>
    </div>


    <!-- 论文网格 -->
    <div class="mb-8">
      <div class="flex items-center justify-between mb-6">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">全部论文</h2>
        <div class="text-sm text-gray-600 dark:text-gray-400">
          共 {totalPapers} 篇论文
        </div>
      </div>
      
      <div id="papers-grid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {sortedPapers.map(paper => (
          <div class="paper-card" data-topics={JSON.stringify(paper.data.topics)}>
            <PaperCard
              title={paper.data.title}
              author={paper.data.author}
              description={paper.data.description}
              publishDate={paper.data.publishDate}
              sourceUrl={paper.data.sourceUrl}
              slug={paper.slug}
              topics={paper.data.topics}
              doi={paper.data.doi}
              journal={paper.data.journal}
              citationCount={paper.data.citationCount}
              paperType={paper.data.paperType}
              keywords={paper.data.keywords}
            />
          </div>
        ))}
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.topic-filter');
    const paperCards = document.querySelectorAll('.paper-card');
    const countDisplay = document.querySelector('.text-sm.text-gray-600.dark\\:text-gray-400');
    const sectionTitle = document.querySelector('.mb-8 h2');
    
    // 主题展开/折叠功能
    const topicsContainer = document.getElementById('topics-container');
    const toggleBtn = document.getElementById('toggle-topics-btn');
    const toggleText = document.getElementById('toggle-topics-text');
    const toggleIcon = document.getElementById('toggle-topics-icon');
    let isTopicsExpanded = false;
    
    // 只在按钮存在时添加事件监听器
    if (toggleBtn) {
      toggleBtn.addEventListener('click', function() {
        if (isTopicsExpanded) {
          // 折叠主题
          topicsContainer.style.maxHeight = '90px'; // 约2行高度
          toggleText.textContent = '展开更多主题';
          toggleIcon.style.transform = 'rotate(0deg)';
          isTopicsExpanded = false;
        } else {
          // 展开主题
          topicsContainer.style.maxHeight = 'none';
          toggleText.textContent = '收起主题';
          toggleIcon.style.transform = 'rotate(180deg)';
          isTopicsExpanded = true;
        }
      });
    }
    
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const selectedTopic = this.dataset.topic;
        
        // Update active button
        filterButtons.forEach(btn => {
          btn.classList.remove('active', 'bg-indigo-600', 'text-white');
          btn.classList.add('bg-white', 'dark:bg-gray-800', 'border', 'border-gray-300', 'dark:border-gray-600', 'text-gray-700', 'dark:text-gray-300');
        });
        
        this.classList.add('active', 'bg-indigo-600', 'text-white');
        this.classList.remove('bg-white', 'dark:bg-gray-800', 'border', 'border-gray-300', 'dark:border-gray-600', 'text-gray-700', 'dark:text-gray-300');
        
        // Filter papers
        let visibleCount = 0;
        paperCards.forEach(card => {
          const topics = JSON.parse(card.dataset.topics);
          const shouldShow = selectedTopic === 'all' || topics.includes(selectedTopic);
          
          if (shouldShow) {
            card.style.display = 'block';
            visibleCount++;
          } else {
            card.style.display = 'none';
          }
        });
        
        // Update count display
        if (countDisplay) {
          countDisplay.textContent = `共 ${visibleCount} 篇论文`;
        }
        
        // Update section title
        if (sectionTitle) {
          sectionTitle.textContent = selectedTopic === 'all' ? '全部论文' : `${selectedTopic} 论文`;
        }
      });
    });
  });
</script>

<style>
  .topic-filter.active {
    background-color: rgb(79 70 229) !important;
    color: white !important;
    border: none !important;
  }
</style>