---
export interface Props {
  currentPage: number;
  totalPages: number;
  baseUrl: string;
}

const { currentPage, totalPages, baseUrl } = Astro.props;

// 生成分页数字数组
const generatePageNumbers = (current: number, total: number) => {
  const pages: (number | string)[] = [];
  
  if (total <= 7) {
    // 如果总页数小于等于7，显示所有页码
    for (let i = 1; i <= total; i++) {
      pages.push(i);
    }
  } else {
    // 复杂逻辑：显示首页、末页和当前页附近的页码
    pages.push(1);
    
    if (current > 3) {
      pages.push('...');
    }
    
    // 当前页前后的页码
    const start = Math.max(2, current - 1);
    const end = Math.min(total - 1, current + 1);
    
    for (let i = start; i <= end; i++) {
      pages.push(i);
    }
    
    if (current < total - 2) {
      pages.push('...');
    }
    
    if (total > 1) {
      pages.push(total);
    }
  }
  
  return pages;
};

const pageNumbers = generatePageNumbers(currentPage, totalPages);

// 处理包含查询参数的baseUrl
const hasQueryParams = baseUrl.includes('?');
const separator = hasQueryParams ? '&' : '?';
const buildPageUrl = (page: number) => {
  if (page === 1) {
    return baseUrl;
  }
  return hasQueryParams 
    ? `${baseUrl}&page=${page}`
    : `/podcasts/page/${page}`;
};
---

{totalPages > 1 && (
  <nav class="flex items-center justify-center space-x-2" aria-label="分页导航">
    <!-- 上一页按钮 -->
    {currentPage > 1 ? (
      <a
        href={buildPageUrl(currentPage - 1)}
        class="px-3 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
        aria-label="上一页"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
      </a>
    ) : (
      <span class="px-3 py-2 bg-gray-100 dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg opacity-50 cursor-not-allowed">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
        </svg>
      </span>
    )}

    <!-- 页码按钮 -->
    {pageNumbers.map(page => 
      typeof page === 'string' ? (
        <span class="px-2 text-gray-500">
          {page}
        </span>
      ) : page === currentPage ? (
        <span 
          class="px-4 py-2 bg-purple-600 text-white rounded-lg font-medium"
          aria-current="page"
        >
          {page}
        </span>
      ) : (
        <a
          href={buildPageUrl(page)}
          class="px-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
        >
          {page}
        </a>
      )
    )}

    <!-- 下一页按钮 -->
    {currentPage < totalPages ? (
      <a
        href={buildPageUrl(currentPage + 1)}
        class="px-3 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors"
        aria-label="下一页"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    ) : (
      <span class="px-3 py-2 bg-gray-100 dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg opacity-50 cursor-not-allowed">
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </span>
    )}
  </nav>
)}

