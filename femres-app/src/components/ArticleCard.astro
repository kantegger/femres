---
import InteractionButtons from './InteractionButtons';

export interface Props {
  title: string;
  author: string;
  description: string;
  featuredImage?: string;
  publishDate: Date;
  readingTime?: number;
  sourceUrl: string;
  slug: string;
  topics: string[];
  articleType?: 'news' | 'blog' | 'research' | 'opinion' | 'analysis';
}

const { 
  title, 
  author, 
  description, 
  featuredImage, 
  publishDate, 
  readingTime, 
  sourceUrl, 
  slug, 
  topics, 
  articleType = 'blog'
} = Astro.props;

// 文章类型配置
const typeConfig = {
  news: { label: '新闻', icon: '📰', color: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200' },
  blog: { label: '博客', icon: '✍️', color: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200' },
  research: { label: '研究', icon: '🔬', color: 'bg-indigo-100 text-indigo-800 dark:bg-indigo-900 dark:text-indigo-200' },
  opinion: { label: '观点', icon: '💭', color: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200' },
  analysis: { label: '分析', icon: '📊', color: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200' }
};

const config = typeConfig[articleType];

const formatDate = (date: Date) => {
  return date.toLocaleDateString('zh-CN', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// 判断是否为近期文章
const isRecent = (date: Date) => {
  const now = new Date();
  const diff = now.getTime() - date.getTime();
  const days = Math.floor(diff / (1000 * 60 * 60 * 24));
  return days <= 7;
};

// 获取作者名字首字母
const getAuthorInitial = (author: string) => {
  return author.charAt(0).toUpperCase();
};

// 为作者头像生成颜色
const getAuthorColor = (author: string) => {
  const colors = [
    'bg-purple-500',
    'bg-blue-500', 
    'bg-green-500',
    'bg-yellow-500',
    'bg-pink-500',
    'bg-indigo-500',
    'bg-red-500',
    'bg-teal-500'
  ];
  let hash = 0;
  for (let i = 0; i < author.length; i++) {
    hash = author.charCodeAt(i) + ((hash << 5) - hash);
  }
  return colors[Math.abs(hash) % colors.length];
};
---

<article class="group relative bg-white dark:bg-gray-800 rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden">
  <a href={`/articles/${slug}`} class="block">
    <div class="relative">
      <!-- Featured Image or Pattern -->
      {featuredImage ? (
        <div class="aspect-[21/9] overflow-hidden">
          <img 
            src={featuredImage} 
            alt={title}
            class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
          />
        </div>
      ) : (
        <div class="h-2 bg-gradient-to-r from-purple-500 via-pink-500 to-indigo-500"></div>
      )}

      <!-- Recent Badge -->
      {isRecent(publishDate) && (
        <div class="absolute top-3 right-3 bg-red-500 text-white text-xs font-bold px-2.5 py-1 rounded-full animate-pulse">
          🔥 最新
        </div>
      )}
    </div>

    <div class="p-6">
      <!-- Article Type & Meta -->
      <div class="flex items-center justify-between mb-3">
        <div class="flex items-center gap-2">
          <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.color}`}>
            <span class="mr-1">{config.icon}</span>
            {config.label}
          </span>
        </div>
        {readingTime && (
          <span class="text-xs text-gray-500 dark:text-gray-400 flex items-center">
            <svg class="w-3.5 h-3.5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            {readingTime}分钟
          </span>
        )}
      </div>

      <!-- Title -->
      <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 line-clamp-2 group-hover:text-purple-600 dark:group-hover:text-purple-400 transition-colors">
        {title}
      </h3>

      <!-- Author & Date -->
      <div class="flex items-center text-sm text-gray-600 dark:text-gray-400 mb-3">
        <div class="flex items-center">
          <div class={`w-6 h-6 rounded-full ${getAuthorColor(author)} flex items-center justify-center text-white text-xs font-semibold mr-2`}>
            {getAuthorInitial(author)}
          </div>
          <span class="font-medium">{author}</span>
        </div>
        <span class="mx-2">·</span>
        <time datetime={publishDate.toISOString()}>
          {formatDate(publishDate)}
        </time>
      </div>

      <!-- Description -->
      <p class="text-gray-700 dark:text-gray-300 text-sm mb-4 line-clamp-3 leading-relaxed">
        {description}
      </p>

      <!-- Topics -->
      <div class="flex flex-wrap gap-1.5 mb-4">
        {topics.slice(0, 6).map(topic => (
          <span class="inline-block px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors">
            #{topic}
          </span>
        ))}
        {topics.length > 6 && (
          <span class="inline-block px-2 py-1 text-xs text-gray-500 dark:text-gray-500">
            +{topics.length - 6}
          </span>
        )}
      </div>

      <!-- Actions -->
      <div class="flex items-center justify-between pt-4 border-t border-gray-100 dark:border-gray-700">
        <div onclick="event.stopPropagation(); event.preventDefault();">
          <InteractionButtons
            contentId={`article-${slug}`}
            contentType="article"
            client:visible
          />
        </div>

        <span class="text-purple-600 dark:text-purple-400 text-sm font-medium group-hover:underline flex items-center">
          阅读全文
          <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </span>
      </div>
    </div>
  </a>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>