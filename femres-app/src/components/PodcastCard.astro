---
import InteractionButtons from './InteractionButtons';

export interface Props {
  title: string;
  author: string;
  description: string;
  thumbnail?: string;
  publishDate: Date;
  duration?: number;
  sourceUrl: string;
  slug: string;
  topics: string[];
  episodeNumber?: number;
}

const { title, author, description, thumbnail, publishDate, duration, sourceUrl, slug, topics, episodeNumber } = Astro.props;

// ËØÜÂà´Êí≠ÂÆ¢Âπ≥Âè∞
const getPlatform = (url: string) => {
  if (url.includes('spotify.com')) {
    return { name: 'Spotify', icon: 'üéµ', color: 'bg-green-500' };
  } else if (url.includes('apple.com/podcasts') || url.includes('podcasts.apple.com')) {
    return { name: 'Apple Podcasts', icon: 'üéß', color: 'bg-purple-600' };
  } else if (url.includes('soundcloud.com')) {
    return { name: 'SoundCloud', icon: '‚òÅÔ∏è', color: 'bg-orange-500' };
  } else if (url.includes('google.com/podcasts')) {
    return { name: 'Google Podcasts', icon: 'üéôÔ∏è', color: 'bg-blue-500' };
  } else {
    return { name: 'Podcast', icon: 'üéß', color: 'bg-gray-500' };
  }
};

const platform = getPlatform(sourceUrl);

const formatDuration = (minutes?: number) => {
  if (!minutes) return '';
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  if (hours > 0) {
    return `${hours}Â∞èÊó∂${mins}ÂàÜÈíü`;
  }
  return `${mins}ÂàÜÈíü`;
};

const formatDate = (date: Date) => {
  const now = new Date();
  const diff = now.getTime() - date.getTime();
  const days = Math.floor(diff / (1000 * 60 * 60 * 24));
  
  if (days < 7) return `${days}Â§©Ââç`;
  if (days < 30) return `${Math.floor(days / 7)}Âë®Ââç`;
  if (days < 365) return `${Math.floor(days / 30)}‰∏™ÊúàÂâç`;
  return `${Math.floor(days / 365)}Âπ¥Ââç`;
};
---

<article class="group relative bg-white dark:bg-gray-800 rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-100 dark:border-gray-700">
  <a href={`/podcasts/${slug}`} class="block">
    <div class="p-6">
      <!-- Episode Info -->
      {episodeNumber && (
        <div class="mb-4">
          <span class="text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 px-2 py-1 rounded-md">
            Á¨¨{episodeNumber}Êúü
          </span>
        </div>
      )}

      <!-- Podcast Content -->
      <div class="flex gap-4">
        <!-- Audio Visual Element -->
        <div class="flex-shrink-0">
          {thumbnail ? (
            <div class="w-20 h-20 rounded-xl overflow-hidden relative">
              <img 
                src={thumbnail} 
                alt={title}
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
              />
              <!-- Audio Wave Overlay -->
              <div class="absolute inset-0 flex items-end justify-center pb-2">
                <div class="flex items-center gap-1">
                  <div class="w-1 bg-white/90 rounded-full animate-pulse shadow-sm" style="height: 8px; animation-delay: 0ms;"></div>
                  <div class="w-1 bg-white/80 rounded-full animate-pulse shadow-sm" style="height: 12px; animation-delay: 150ms;"></div>
                  <div class="w-1 bg-white/90 rounded-full animate-pulse shadow-sm" style="height: 6px; animation-delay: 300ms;"></div>
                  <div class="w-1 bg-white rounded-full animate-pulse shadow-sm" style="height: 14px; animation-delay: 450ms;"></div>
                  <div class="w-1 bg-white/80 rounded-full animate-pulse shadow-sm" style="height: 10px; animation-delay: 600ms;"></div>
                </div>
              </div>
            </div>
          ) : (
            <div class="w-20 h-20 rounded-xl bg-gradient-to-br from-indigo-500 to-purple-600 flex items-center justify-center relative overflow-hidden">
              <!-- Background Audio Waves -->
              <div class="absolute inset-0 opacity-30">
                <div class="flex items-center justify-center h-full gap-1">
                  <div class="w-1 bg-white rounded-full animate-pulse" style="height: 12px; animation-delay: 0ms;"></div>
                  <div class="w-1 bg-white rounded-full animate-pulse" style="height: 18px; animation-delay: 150ms;"></div>
                  <div class="w-1 bg-white rounded-full animate-pulse" style="height: 8px; animation-delay: 300ms;"></div>
                  <div class="w-1 bg-white rounded-full animate-pulse" style="height: 22px; animation-delay: 450ms;"></div>
                  <div class="w-1 bg-white rounded-full animate-pulse" style="height: 14px; animation-delay: 600ms;"></div>
                </div>
              </div>
              <!-- Play Icon -->
              <span class="text-2xl text-white relative z-10">üéß</span>
            </div>
          )}
        </div>

        <!-- Content -->
        <div class="flex-1 min-w-0">
          <!-- Title with Platform Badge -->
          <div class="flex items-start justify-between mb-2">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white line-clamp-2 group-hover:text-purple-600 dark:group-hover:text-purple-400 transition-colors flex-1 mr-3">
              {title}
            </h3>
            <div class={`${platform.color} text-white text-xs font-bold px-3 py-1.5 rounded-full flex items-center gap-1.5 flex-shrink-0`}>
              <span>{platform.icon}</span>
              <span>{platform.name}</span>
            </div>
          </div>

          <!-- Host & Meta -->
          <div class="flex items-center text-sm text-gray-600 dark:text-gray-400 mb-3">
            <div class="flex items-center">
              <svg class="w-4 h-4 mr-1.5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a2 2 0 012-2h2a2 2 0 012 2v3a3 3 0 01-3 3z"></path>
              </svg>
              <span class="font-medium">{author}</span>
            </div>
            <span class="mx-2">‚Ä¢</span>
            <span>{formatDate(publishDate)}</span>
            {duration && (
              <>
                <span class="mx-2">‚Ä¢</span>
                <span class="flex items-center">
                  <svg class="w-3.5 h-3.5 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                  </svg>
                  {formatDuration(duration)}
                </span>
              </>
            )}
          </div>

          <!-- Description -->
          <p class="text-gray-700 dark:text-gray-300 text-sm mb-3 line-clamp-2">
            {description}
          </p>

          <!-- Topics -->
          <div class="flex flex-wrap gap-1.5">
            {topics.slice(0, 5).map(topic => (
              <span class="inline-block px-2 py-1 text-xs bg-purple-50 dark:bg-purple-900/30 text-purple-600 dark:text-purple-400 rounded-md">
                #{topic}
              </span>
            ))}
            {topics.length > 5 && (
              <span class="inline-block px-2 py-1 text-xs text-gray-500 dark:text-gray-500">
                +{topics.length - 5}
              </span>
            )}
          </div>
        </div>
      </div>

      <!-- Action Bar -->
      <div class="flex items-center justify-between mt-5 pt-4 border-t border-gray-100 dark:border-gray-700">
        <div onclick="event.stopPropagation(); event.preventDefault();">
          <InteractionButtons 
            contentId={`podcast-${slug}`} 
            initialLikes={0}
            client:visible 
          />
        </div>

        <div class="flex items-center text-purple-600 dark:text-purple-400 text-sm font-medium group-hover:underline">
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z"/>
          </svg>
          Êî∂Âê¨ËäÇÁõÆ
        </div>
      </div>
    </div>
  </a>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>