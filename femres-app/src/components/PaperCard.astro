---
import InteractionButtons from './InteractionButtons';
import '../i18n/translations';
import { createT, getLocalizedPath, getLocaleFromUrl } from '../i18n/index';
import { getTopicTranslation } from '../i18n/topicsUtils';

export interface Props {
  title: string;
  titleEn?: string;
  author: string;
  description: string;
  descriptionEn?: string;
  publishDate: Date;
  slug: string;
  topics: string[];
  journal?: string;
  doi?: string;
  citationCount?: number;
  paperType?: 'research' | 'review' | 'case-study' | 'theoretical';
  locale?: string;
  abstract?: string;
  abstractEn?: string;
  keywords?: string[];
  keywordsEn?: string[];
}

const {
  title,
  titleEn,
  author,
  description,
  descriptionEn,
  publishDate,
  slug,
  topics,
  journal,
  doi,
  citationCount,
  paperType,
  locale,
  abstract,
  abstractEn,
  keywords,
  keywordsEn
} = Astro.props;

// 获取当前语言
const currentLocale = locale || getLocaleFromUrl(Astro.url);
const t = createT(currentLocale);

// 根据语言选择显示内容
const displayTitle = (currentLocale === 'en' && titleEn) ? titleEn : title;
const displayDescription = (currentLocale === 'en' && descriptionEn) ? descriptionEn : description;
const displayAbstract = (currentLocale === 'en' && abstractEn) ? abstractEn : abstract;
const displayKeywords = (currentLocale === 'en' && keywordsEn) ? keywordsEn : keywords;

// 生成本地化链接
// 移除语言后缀以生成干净的URL路径
const cleanSlug = slug.endsWith('-en') ? slug.slice(0, -3) : slug;
const paperLink = getLocalizedPath(`papers/${cleanSlug}`, currentLocale);

// 论文类型配置
const typeConfig = {
  research: {
    label: currentLocale === 'en' ? 'Research' : '研究论文',
    icon: '🔬',
    color: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'
  },
  review: {
    label: currentLocale === 'en' ? 'Review' : '综述论文',
    icon: '📊',
    color: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
  },
  'case-study': {
    label: currentLocale === 'en' ? 'Case Study' : '案例研究',
    icon: '📋',
    color: 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200'
  },
  theoretical: {
    label: currentLocale === 'en' ? 'Theoretical' : '理论研究',
    icon: '💭',
    color: 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200'
  }
};

const config = typeConfig[paperType || 'research'];

const formatDate = (date: Date) => {
  return date.getFullYear();
};
---

<article class="group relative bg-white dark:bg-gray-800 rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden border-l-4 border-indigo-500">
  <a href={paperLink} class="block">
    <div class="p-6">
      <!-- Header with Type and Impact Indicators -->
      <div class="flex items-center justify-between mb-4">
        <div class="flex items-center gap-2">
          <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${config.color}`}>
            <span class="mr-1">{config.icon}</span>
            {config.label}
          </span>
          {journal && (
            <span class="text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 px-2 py-1 rounded-md">
              {journal}
            </span>
          )}
        </div>

        <div class="flex items-center gap-2">
        </div>
      </div>

      <!-- Title -->
      <h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3 line-clamp-2 group-hover:text-indigo-600 dark:group-hover:text-indigo-400 transition-colors leading-tight">
        {displayTitle}
        <span class="text-sm text-gray-600 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded-md font-mono ml-2">
          {formatDate(publishDate)}
        </span>
      </h3>

      <!-- Authors -->
      <div class="flex items-center text-sm text-gray-600 dark:text-gray-400 mb-3">
        <svg class="w-4 h-4 mr-1.5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z"></path>
        </svg>
        <span class="font-medium">{author}</span>
      </div>

      <!-- Abstract/Description -->
      <p class="text-gray-700 dark:text-gray-300 text-sm mb-4 line-clamp-3 leading-relaxed">
        {displayAbstract || displayDescription}
      </p>

      <!-- Keywords -->
      {displayKeywords && displayKeywords.length > 0 && (
        <div class="flex flex-wrap gap-1.5 mb-4">
          {displayKeywords.slice(0, 5).map(keyword => (
            <span class="inline-block px-2 py-1 text-xs bg-indigo-50 dark:bg-indigo-900/30 text-indigo-600 dark:text-indigo-400 rounded-md border border-indigo-200 dark:border-indigo-800">
              {keyword}
            </span>
          ))}
          {displayKeywords.length > 5 && (
            <span class="inline-block px-2 py-1 text-xs text-gray-500 dark:text-gray-500">
              +{displayKeywords.length - 5}
            </span>
          )}
        </div>
      )}

      <!-- Topics (fallback if no keywords) -->
      {(!displayKeywords || displayKeywords.length === 0) && (
        <div class="flex flex-wrap gap-1.5 mb-4">
          {topics.slice(0, 3).map(topic => {
            const translatedTopic = getTopicTranslation(topic, currentLocale as 'zh-CN' | 'en');
            return (
              <span class="inline-block px-2 py-1 text-xs bg-indigo-50 dark:bg-indigo-900/30 text-indigo-600 dark:text-indigo-400 rounded-md border border-indigo-200 dark:border-indigo-800">
                {translatedTopic}
              </span>
            );
          })}
          {topics.length > 3 && (
            <span class="inline-block px-2 py-1 text-xs text-gray-500 dark:text-gray-500">
              +{topics.length - 3}
            </span>
          )}
        </div>
      )}

      <!-- Metrics and Actions -->
      <div class="flex items-center justify-between pt-4 border-t border-gray-100 dark:border-gray-700">
        <div class="flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400">
          {citationCount && (
            <div class="flex items-center gap-1">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
              </svg>
              <span class="font-medium">{citationCount}</span>
              <span class="text-xs">{currentLocale === 'en' ? 'citations' : '引用'}</span>
            </div>
          )}

          <div onclick="event.stopPropagation(); event.preventDefault();">
            <InteractionButtons
              contentId={`paper-${slug}`}
              contentType="paper"
              client:visible
            />
          </div>
        </div>

        <span class="text-indigo-600 dark:text-indigo-400 text-sm font-medium group-hover:underline flex items-center">
          {currentLocale === 'en' ? 'Read Paper' : '阅读论文'}
          <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </span>
      </div>
    </div>
  </a>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>