---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import PodcastCard from '../../components/PodcastCard.astro';

const podcasts = await getCollection('podcasts');
const publishedPodcasts = podcasts.filter(podcast => podcast.data.status === 'published');

// 按发布日期排序
const sortedPodcasts = publishedPodcasts.sort((a, b) => {
  return new Date(b.data.publishDate).getTime() - new Date(a.data.publishDate).getTime();
});

// 获取所有主题标签
const allTopics = [...new Set(publishedPodcasts.flatMap(podcast => podcast.data.topics))].sort();

// 统计信息
const totalPodcasts = publishedPodcasts.length;
const totalDuration = publishedPodcasts.reduce((sum, podcast) => sum + (podcast.data.duration || 0), 0);
const totalEpisodes = publishedPodcasts.reduce((sum, podcast) => sum + (podcast.data.episodeNumber ? 1 : 0), 0);

// 格式化总时长
const formatTotalDuration = (minutes: number) => {
  const hours = Math.floor(minutes / 60);
  if (hours > 0) {
    return `${hours}小时${minutes % 60}分钟`;
  }
  return `${minutes}分钟`;
};
---

<Layout 
  title="播客 - FemHub"
  description="精选女性主义播客内容，聆听来自全球的女性声音，探讨性别议题的深度对话与思辨。"
>
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <!-- Header -->
    <div class="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <div class="text-center">
          <h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">
            🎧 播客频道
          </h1>
          <p class="text-xl text-gray-600 dark:text-gray-400 mb-8 max-w-2xl mx-auto">
            聆听全球女性主义学者、活动家和思想家的声音，在对话中启发思考
          </p>
          
          <!-- 统计信息 -->
          <div class="flex flex-wrap justify-center gap-6 text-sm">
            <div class="flex items-center bg-purple-50 dark:bg-purple-900/20 px-4 py-2 rounded-full">
              <span class="text-purple-600 dark:text-purple-400 mr-2">🎙️</span>
              <span class="text-purple-800 dark:text-purple-200">共 {totalPodcasts} 档播客</span>
            </div>
            <div class="flex items-center bg-orange-50 dark:bg-orange-900/20 px-4 py-2 rounded-full">
              <span class="text-orange-600 dark:text-orange-400 mr-2">🏷️</span>
              <span class="text-orange-800 dark:text-orange-200">{allTopics.length} 个主题分类</span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      
      <!-- 主题标签筛选 -->
      <div class="mb-12">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-6">主题分类</h2>
        <div class="flex flex-wrap gap-3">
          <button 
            class="filter-btn inline-flex items-center px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-sm font-medium"
            data-filter="all"
          >
            全部播客
          </button>
          {allTopics.map(topic => (
            <button 
              class="filter-btn inline-flex items-center px-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:border-purple-500 dark:hover:border-purple-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors text-sm"
              data-filter={topic}
            >
              {topic}
            </button>
          ))}
        </div>
      </div>

      <!-- 播客网格 -->
      <div class="mb-8">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white">
            <span id="current-filter">全部播客</span>
            <span id="podcast-count" class="text-base font-normal text-gray-600 dark:text-gray-400 ml-2">
              ({totalPodcasts} 档)
            </span>
          </h2>
          <div class="flex items-center gap-4">
            <select id="sort-select" class="px-3 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-lg text-sm">
              <option value="date-desc">最新发布</option>
              <option value="date-asc">最早发布</option>
              <option value="title-asc">标题 A-Z</option>
              <option value="title-desc">标题 Z-A</option>
              <option value="duration-asc">时长（短）</option>
              <option value="duration-desc">时长（长）</option>
            </select>
          </div>
        </div>
        
        <div id="podcasts-grid" class="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {sortedPodcasts.map(podcast => (
            <div class="podcast-item" data-topics={JSON.stringify(podcast.data.topics)} data-title={podcast.data.title} data-date={podcast.data.publishDate.toISOString()} data-duration={podcast.data.duration || 0}>
              <PodcastCard 
                title={podcast.data.title}
                author={podcast.data.author}
                description={podcast.data.description}
                slug={podcast.slug}
                thumbnail={podcast.data.thumbnail}
                publishDate={podcast.data.publishDate}
                duration={podcast.data.duration}
                sourceUrl={podcast.data.sourceUrl}
                topics={podcast.data.topics}
                episodeNumber={podcast.data.episodeNumber}
              />
            </div>
          ))}
        </div>
      </div>

      <!-- 空状态 -->
      {sortedPodcasts.length === 0 && (
        <div class="text-center py-16">
          <div class="text-6xl mb-4">🎧</div>
          <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">
            暂无播客内容
          </h3>
          <p class="text-gray-600 dark:text-gray-400">
            我们正在努力添加更多优质的女性主义播客资源
          </p>
        </div>
      )}

      <!-- 收听指南 -->
      <div class="mt-16 bg-gradient-to-r from-purple-50 to-indigo-50 dark:from-purple-900/20 dark:to-indigo-900/20 rounded-2xl p-8">
        <div class="text-center">
          <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
            🎯 收听建议
          </h2>
          <div class="grid md:grid-cols-3 gap-6 text-left mt-8">
            <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
              <div class="text-2xl mb-3">🌍</div>
              <h3 class="font-semibold text-gray-900 dark:text-white mb-2">多元声音</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                聆听来自不同文化背景的女性主义者的声音，拓展全球视野和理解
              </p>
            </div>
            <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
              <div class="text-2xl mb-3">💭</div>
              <h3 class="font-semibold text-gray-900 dark:text-white mb-2">深度对话</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                通过长篇对话和访谈，深入了解复杂的性别议题和社会现象
              </p>
            </div>
            <div class="bg-white dark:bg-gray-800 rounded-xl p-6 shadow-sm">
              <div class="text-2xl mb-3">📱</div>
              <h3 class="font-semibold text-gray-900 dark:text-white mb-2">随时随地</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400">
                利用碎片化时间学习，在通勤或休息时收听，让思考融入日常生活
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const sortSelect = document.getElementById('sort-select');
    const podcastsGrid = document.getElementById('podcasts-grid');
    const currentFilter = document.getElementById('current-filter');
    const podcastCount = document.getElementById('podcast-count');
    
    let currentTopic = 'all';
    
    // 筛选功能
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filterValue = this.dataset.filter;
        currentTopic = filterValue;
        
        // 更新按钮样式
        filterButtons.forEach(btn => {
          btn.classList.remove('bg-purple-600', 'text-white');
          btn.classList.add('bg-white', 'dark:bg-gray-800', 'border', 'border-gray-300', 'dark:border-gray-600', 'text-gray-700', 'dark:text-gray-300');
        });
        
        this.classList.remove('bg-white', 'dark:bg-gray-800', 'border', 'border-gray-300', 'dark:border-gray-600', 'text-gray-700', 'dark:text-gray-300');
        this.classList.add('bg-purple-600', 'text-white');
        
        // 更新标题
        currentFilter.textContent = filterValue === 'all' ? '全部播客' : filterValue;
        
        // 执行筛选
        filterAndSort();
      });
    });
    
    // 排序功能
    sortSelect.addEventListener('change', function() {
      filterAndSort();
    });
    
    function filterAndSort() {
      const podcastItems = Array.from(document.querySelectorAll('.podcast-item'));
      const sortValue = sortSelect.value;
      
      // 筛选
      let filteredPodcasts = podcastItems.filter(item => {
        if (currentTopic === 'all') return true;
        const topics = JSON.parse(item.dataset.topics);
        return topics.includes(currentTopic);
      });
      
      // 排序
      filteredPodcasts.sort((a, b) => {
        switch (sortValue) {
          case 'date-desc':
            return new Date(b.dataset.date).getTime() - new Date(a.dataset.date).getTime();
          case 'date-asc':
            return new Date(a.dataset.date).getTime() - new Date(b.dataset.date).getTime();
          case 'title-asc':
            return a.dataset.title.localeCompare(b.dataset.title);
          case 'title-desc':
            return b.dataset.title.localeCompare(a.dataset.title);
          case 'duration-asc':
            return parseInt(a.dataset.duration) - parseInt(b.dataset.duration);
          case 'duration-desc':
            return parseInt(b.dataset.duration) - parseInt(a.dataset.duration);
          default:
            return 0;
        }
      });
      
      // 隐藏所有播客
      podcastItems.forEach(item => {
        item.style.display = 'none';
      });
      
      // 显示筛选后的播客
      filteredPodcasts.forEach((item, index) => {
        item.style.display = 'block';
        podcastsGrid.appendChild(item);
      });
      
      // 更新计数
      podcastCount.textContent = `(${filteredPodcasts.length} 档)`;
      
      // 如果没有结果，显示空状态
      const emptyState = document.getElementById('empty-state');
      if (filteredPodcasts.length === 0) {
        if (!emptyState) {
          const emptyDiv = document.createElement('div');
          emptyDiv.id = 'empty-state';
          emptyDiv.className = 'col-span-full text-center py-16';
          emptyDiv.innerHTML = `
            <div class="text-6xl mb-6">🎧</div>
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
              暂无相关播客
            </h3>
            <p class="text-gray-600 dark:text-gray-400">
              该主题下暂无播客，试试其他主题或查看全部播客
            </p>
          `;
          podcastsGrid.appendChild(emptyDiv);
        }
      } else if (emptyState) {
        emptyState.remove();
      }
    }
  });
</script>