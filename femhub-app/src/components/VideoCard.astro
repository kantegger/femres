---
export interface Props {
  title: string;
  author: string;
  description: string;
  thumbnail?: string;
  publishDate: Date;
  duration?: number;
  sourceUrl: string;
  slug: string;
  topics: string[];
}

const { title, author, description, thumbnail, publishDate, duration, sourceUrl, slug, topics } = Astro.props;

// 识别视频平台
const getPlatform = (url: string) => {
  if (url.includes('youtube.com') || url.includes('youtu.be')) {
    return { name: 'YouTube', icon: '🎬', color: 'bg-red-500' };
  } else if (url.includes('bilibili.com')) {
    return { name: 'Bilibili', icon: '📺', color: 'bg-blue-500' };
  } else if (url.includes('vimeo.com')) {
    return { name: 'Vimeo', icon: '🎥', color: 'bg-sky-500' };
  } else if (url.includes('ted.com')) {
    return { name: 'TED', icon: '💡', color: 'bg-red-600' };
  } else {
    return { name: 'Video', icon: '🎥', color: 'bg-gray-500' };
  }
};

const platform = getPlatform(sourceUrl);

const formatDuration = (minutes?: number) => {
  if (!minutes) return '';
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  if (hours > 0) {
    return `${hours}:${mins.toString().padStart(2, '0')}:00`;
  }
  return `${mins}:00`;
};

const formatDate = (date: Date) => {
  const now = new Date();
  const diff = now.getTime() - date.getTime();
  const days = Math.floor(diff / (1000 * 60 * 60 * 24));
  
  if (days < 7) return `${days}天前`;
  if (days < 30) return `${Math.floor(days / 7)}周前`;
  if (days < 365) return `${Math.floor(days / 30)}个月前`;
  return `${Math.floor(days / 365)}年前`;
};
---

<article class="group relative bg-white dark:bg-gray-800 rounded-2xl shadow-sm hover:shadow-xl transition-all duration-300 overflow-hidden">
  <a href={`/videos/${slug}`} class="block">
    <!-- Thumbnail with Play Button Overlay -->
    <div class="relative aspect-video bg-gray-900 overflow-hidden">
      {thumbnail ? (
        <img 
          src={thumbnail} 
          alt={title}
          class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
        />
      ) : (
        <div class="w-full h-full bg-gradient-to-br from-indigo-500 to-purple-600 flex items-center justify-center">
          <span class="text-6xl text-white/80">🎬</span>
        </div>
      )}
      
      <!-- Play Button Overlay -->
      <div class="absolute inset-0 bg-black/30 group-hover:bg-black/40 transition-colors flex items-center justify-center">
        <div class="w-16 h-16 bg-white/90 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform">
          <svg class="w-8 h-8 text-gray-900 ml-1" fill="currentColor" viewBox="0 0 20 20">
            <path d="M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z"/>
          </svg>
        </div>
      </div>

      <!-- Duration Badge -->
      {duration && (
        <div class="absolute bottom-2 right-2 bg-black/80 text-white text-xs font-medium px-2 py-1 rounded">
          {formatDuration(duration)}
        </div>
      )}

      <!-- Platform Badge -->
      <div class={`absolute top-2 left-2 ${platform.color} text-white text-xs font-bold px-2.5 py-1 rounded-full flex items-center gap-1`}>
        <span>{platform.icon}</span>
        <span>{platform.name}</span>
      </div>

    </div>

    <!-- Video Info -->
    <div class="p-5">
      <div class="flex items-start gap-3">
        <!-- Channel Avatar Placeholder -->
        <div class="w-10 h-10 rounded-full bg-gradient-to-br from-purple-400 to-pink-400 flex-shrink-0 flex items-center justify-center">
          <span class="text-white text-sm font-bold">
            {author.charAt(0).toUpperCase()}
          </span>
        </div>

        <div class="flex-1 min-w-0">
          <!-- Title -->
          <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-1 line-clamp-2 group-hover:text-purple-600 dark:group-hover:text-purple-400 transition-colors">
            {title}
          </h3>

          <!-- Channel & Meta -->
          <div class="flex items-center text-sm text-gray-600 dark:text-gray-400 mb-2">
            <span class="font-medium hover:text-gray-900 dark:hover:text-gray-200">
              {author}
            </span>
            <span class="mx-2">•</span>
            <span>{formatDate(publishDate)}</span>
          </div>

          <!-- Description -->
          <p class="text-gray-700 dark:text-gray-300 text-sm mb-3 line-clamp-2">
            {description}
          </p>

          <!-- Topics -->
          <div class="flex flex-wrap gap-1.5">
            {topics.slice(0, 6).map(topic => (
              <span class="inline-block px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 rounded-md">
                {topic}
              </span>
            ))}
            {topics.length > 6 && (
              <span class="inline-block px-2 py-1 text-xs bg-gray-100 dark:bg-gray-700 text-gray-500 dark:text-gray-500 rounded-md">
                +{topics.length - 6}
              </span>
            )}
          </div>
        </div>
      </div>

      <!-- Action Bar -->
      <div class="flex items-center justify-between mt-4 pt-3 border-t border-gray-100 dark:border-gray-700">
        <div class="flex items-center gap-4 text-sm text-gray-500 dark:text-gray-400">
          <button class="hover:text-purple-600 dark:hover:text-purple-400 transition-colors flex items-center gap-1">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5"></path>
            </svg>
            赞
          </button>
          <button class="hover:text-purple-600 dark:hover:text-purple-400 transition-colors flex items-center gap-1">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
            </svg>
            分享
          </button>
        </div>
        
        <button class="text-gray-400 hover:text-purple-600 dark:hover:text-purple-400 transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"></path>
          </svg>
        </button>
      </div>
    </div>
  </a>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>